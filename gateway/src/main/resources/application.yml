server:
  port: ${GATEWAY_PORT}
  servlet:
    session:
      cookie:
        name: GATEWAY-CLIENT

spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: authorization-server
          uri: http://${AUTHORIZATION_SERVER_HOST}:${AUTHORIZATION_SERVER_PORT}
          predicates:
            - Path=/auth-server/**

        - id: order-service
          uri: http://${ORDER_SERVICE_HOST}:${ORDER_SERVICE_PORT}
          predicates:
            Path=/order/**
          filters:
            - TokenRelay

        - id: configuration-service
          uri: http://${CONFIGURATION_SERVICE_HOST}:${CONFIGURATION_SERVICE_PORT}
          predicates:
            Path=/car-wash/**
          filters:
            - TokenRelay

        - id: service-of-services
          uri: http://${SERVICE_OF_SERVICES_HOST}:${SERVICE_OF_SERVICES_PORT}
          predicates:
            Path=/service/**

        - id: business-order-service
          uri: http://${BUSINESS_ORDER_SERVICE_HOST}:${BUSINESS_ORDER_SERVICE_PORT}
          predicates:
            Path=/business-order/**
          filters:
            - TokenRelay

        - id: statistics-service
          uri: http://${STATISTICS_HOST}:${STATISTICS_PORT}
          predicates:
            Path=/statistics/**
          filters:
            - TokenRelay

        - id: notification-service
          uri: http://${NOTIFICATION_SERVICE_HOST}:${NOTIFICATION_SERVICE_PORT}
          predicates:
            Path=/notification/**
          filters:
            - TokenRelay

  security:
    oauth2:
      client:
        registration:
          messaging-gateway-oidc:
            provider: gateway-client-provider
            client-id: relive-client
            client-secret: relive-client
            authorization-grant-type: authorization_code
            redirect-uri: "http://${APPLICATION_HOST}:${GATEWAY_PORT}/login/oauth2/code/{registrationId}"
            scope:
              - openid
              - profile
            client-name: messaging-gateway-oidc
        provider:
          gateway-client-provider:
            authorization-uri: http://${APPLICATION_HOST}:${AUTHORIZATION_SERVER_PORT}/oauth2/authorize
            token-uri: http://${AUTHORIZATION_SERVER_HOST}:${AUTHORIZATION_SERVER_PORT}/oauth2/token
            jwk-set-uri: http://${AUTHORIZATION_SERVER_HOST}:${AUTHORIZATION_SERVER_PORT}/oauth2/jwks
            user-info-uri: http://${AUTHORIZATION_SERVER_HOST}:${AUTHORIZATION_SERVER_PORT}/userinfo
            user-name-attribute: sub

  session:
    redis:
      flush-mode: on_save
      namespace: gateway:session

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operationsSorter: method
    config-url: /v3/api-docs/swagger-config
    urls:
      - url: /order/v3/api-docs
        name: Order service
      - url: /car-wash/v3/api-docs
        name: Car wash service
      - url: /business-order/v3/api-docs
        name: Business order service
      - url: /statistics/v3/api-docs
        name: Statistics
      - url: /notification/v3/api-docs
        name: Notification service
      - url: /service/v3/api-docs
        name: Service of services

eureka:
  client:
    service-url:
      defaultZone: http://${REGISTRY_SERVICE_HOST}:${REGISTRY_SERVICE_PORT}/eureka

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    org.springframework.cloud.gateway: INFO
